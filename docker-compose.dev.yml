services:
  db:
    image: mongo:7.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: dating_app
    ports:
      - "27017:27017"
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongo_data:/data/db

  object-storage:
    image: minio/minio:latest
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  imgproxy:
    image: darthsim/imgproxy:latest
    restart: always
    environment:
      IMGPROXY_BIND: "0.0.0.0:8080"
      IMGPROXY_USE_S3: "true"
      IMGPROXY_S3_ENDPOINT: "http://object-storage:9000"
      IMGPROXY_S3_REGION: "us-east-1"
      IMGPROXY_AWS_ACCESS_KEY_ID: "minioadmin"
      IMGPROXY_AWS_SECRET_ACCESS_KEY: "minioadmin"
    ports:
      - "8080:8080"
    depends_on:
      - object-storage

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - NODE_ENV=development
      - PORT=4000
      - MONGODB_URI=mongodb://root:example@db:27017/dating_app?authSource=admin
      - MONGODB_DATABASE=dating_app
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - AWS_BUCKET=photos
      - AWS_REGION=us-east-1
    env_file:
      - .env
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
      - object-storage

  tg-web-app:
    build:
      context: ./tg-web-app
      dockerfile: Dockerfile
    restart: always
    environment:
      - NODE_ENV=development
      - VITE_BACKEND_URL=http://localhost:4000
    ports:
      - "5173:5173"
    volumes:
      - ./tg-web-app:/app
      - /app/node_modules
    depends_on:
      - backend

volumes:
  mongo_data:
  minio_data:
